syntax = "proto3";

message LeasePaxos {
	string tm = 1;
	repeated string keys = 2;
	int32 lease_id = 3;
}
message PrepareRequest {
	int32 round_id = 1;
	int32 leader_id = 2;
	int32 epoch = 3;
}

message Promise {
	int32 write_ts = 1;
	repeated LeasePaxos leases = 2;
	bool ack = 3; //if its false its not a promise
	int32 epoch = 4;
}
message AcceptRequest {
	int32 write_ts = 1;
	repeated LeasePaxos leases = 2;
	int32 leader_id = 3;
	int32 epoch = 4;
}

message AcceptReply {
	bool ack = 1;
	int32 epoch = 2;
}
message AckRequest {
	int32 epoch = 1;
}
message PingLmLm {}

message KillRequestLmLm {
	string tm_name = 1;
}
service PaxosService {
	rpc Prepare (PrepareRequest) returns (Promise);
	rpc Accept (AcceptRequest) returns (AcceptReply);
	rpc Accepted (AcceptRequest) returns (AcceptReply);
	rpc GetLeaderAck (AckRequest) returns (AcceptReply);
	rpc PingSuspect (PingLmLm) returns (PingLmLm);
	rpc KillSuspect (KillRequestLmLm) returns (PingLmLm);
}